name: BUILD & RELEASE

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  
  build:
    
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Directory setup
        run: |
             mkdir --parents android/sdk android/build assets include lib/armeabi-v7a lib/arm64-v8a lib/x86 lib/x86_64 src
             cd android/build
             mkdir --parents obj dex res/values src/com/raylib/game assets
             mkdir --parents lib/armeabi-v7a lib/arm64-v8a lib/x86 lib/x86_64
             mkdir --parents res/drawable-ldpi res/drawable-mdpi res/drawable-hdpi res/drawable-xhdpi
             cd ../..

      - name: Setup JDK
        uses: actions/setup-java@v2.5.0
        with:
          distribution: temurin
          java-version: "11"
      
      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Setup Android NDK
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r25b

      - name: clone repo
        run: git clone https://github.com/raysan5/raylib --depth 1

      - name: Compile raylib
        run: |
             cd raylib/src
             cp raylib.h ../../include
             make clean
             make PLATFORM=PLATFORM_ANDROID ANDROID_NDK=../../android/ndk ANDROID_ARCH=arm ANDROID_API_VERSION=29
             mv libraylib.a ../../lib/armeabi-v7a
             make clean
             make PLATFORM=PLATFORM_ANDROID ANDROID_NDK=../../android/ndk ANDROID_ARCH=arm64 ANDROID_API_VERSION=29
             mv libraylib.a ../../lib/arm64-v8a
             make clean
             make PLATFORM=PLATFORM_ANDROID ANDROID_NDK=../../android/ndk ANDROID_ARCH=x86 ANDROID_API_VERSION=29
             mv libraylib.a ../../lib/x86
             make clean
             make PLATFORM=PLATFORM_ANDROID ANDROID_NDK=../../android/ndk ANDROID_ARCH=x86_64 ANDROID_API_VERSION=29
             mv libraylib.a ../../lib/x86_64
             make clean
             cd ../..

      - name: Upload APK
        uses: actions/upload-artifact@v1
        with:
          name: apk
          path: ../../lib/armeabi-v7a/libraylib.a

      - name: Download from build
        uses: actions/download-artifact@v1
        with:
          name: apk

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: ${{ github.event.repository.name }} v${{ github.run_number }}
        
      - name: Upload Release
        id: upload_release_asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: src/raylib.a
          asset_name: ${{ github.event.repository.name }}.zip
          asset_content_type: application/zip
